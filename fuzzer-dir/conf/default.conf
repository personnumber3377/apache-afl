ServerRoot "/home/oof/apache-afl/install_dir"
Listen 8080
ServerName localhost
PidFile logs/httpd.pid
ErrorLog "/dev/stdout"
LogLevel debug

# Load statically linked modules (or shared if applicable)
# No need to load modules since this is a static build anyway...
# LoadModule alias_module         modules/mod_alias.so
# LoadModule autoindex_module     modules/mod_autoindex.so
# LoadModule cgi_module           modules/mod_cgi.so
# LoadModule env_module           modules/mod_env.so
# LoadModule headers_module       modules/mod_headers.so
# LoadModule mime_module          modules/mod_mime.so
# LoadModule rewrite_module       modules/mod_rewrite.so
# LoadModule setenvif_module      modules/mod_setenvif.so
# LoadModule proxy_module         modules/mod_proxy.so
# LoadModule proxy_http_module    modules/mod_proxy_http.so
# LoadModule status_module        modules/mod_status.so

DocumentRoot "/home/oof/apache-afl/install_dir/htdocs"
<Directory "/home/oof/apache-afl/install_dir/htdocs">
    Options Indexes FollowSymLinks
    AllowOverride None
    Require all granted
</Directory>

# -------- MODULE FUZZ PATHS --------

# /a → CGI (mod_cgi)
ScriptAlias /a "/home/oof/apache-afl/install_dir/cgi-bin/test.cgi"

# /b → Plain file (mod_mime)
Alias /b "/home/oof/apache-afl/install_dir/htdocs/b.txt"

# /c → Redirected path (mod_rewrite)
RewriteEngine On
RewriteRule "^/c$" "/b" [R,L]

# /d → Adds MIME encoding (mod_mime)
Alias /d "/home/oof/apache-afl/install_dir/htdocs/compress.txt.gz"
AddEncoding x-gzip .gz
AddType text/plain .txt

# /e → Headers (mod_headers)
<Location /e>
    Header set X-Fuzzed "1"
</Location>

# /f → Server status (mod_status)
<Location /f>
    SetHandler server-status
    Require all granted
</Location>

# /g → Proxied request (mod_proxy)
ProxyRequests Off
<Proxy "*">
    Require all granted
</Proxy>
ProxyPass /kk http://127.0.0.1:8081/
ProxyPassReverse /kk http://127.0.0.1:8081/

# /h → AutoIndex (mod_autoindex)
Alias /h "/home/oof/apache-afl/install_dir/htdocs/autoindex/"
<Directory "/home/oof/apache-afl/install_dir/htdocs/autoindex">
    Options +Indexes
    Require all granted
</Directory>

# /i → SSI (mod_include)
Alias /i "/home/oof/apache-afl/install_dir/htdocs/ssi.shtml"
<Directory "/home/oof/apache-afl/install_dir/htdocs">
    Options +Includes
    AddType text/html .shtml
    AddOutputFilter INCLUDES .shtml
</Directory>

















# These next entries are taken from here: https://github.com/antonio-morales/Apache-HTTP-Fuzzing.git


<IfModule alias_module>
    #
    # Redirect: Allows you to tell clients about documents that used to 
    # exist in your server's namespace, but do not anymore. The client 
    # will make a new request for the document at its new location.
    # Example:
    Redirect seeother /red http://www.example.com/bar

    #
    # Alias: Maps web paths into filesystem paths and is used to
    # access content that does not live under the DocumentRoot.
    # Example:
    # Alias /webpath /full/filesystem/path
    #
    # If you include a trailing / on /webpath then the server will
    # require it to be present in the URL.  You will also likely
    # need to provide a <Directory> section to allow access to
    # the filesystem path.

    #
    # ScriptAlias: This controls which directories contain server scripts. 
    # ScriptAliases are essentially the same as Aliases, except that
    # documents in the target directory are treated as applications and
    # run by the server when requested rather than as documents sent to the
    # client.  The same rules about trailing "/" apply to ScriptAlias
    # directives as to Alias.
    #
    ScriptAlias /cgi-bin/ "/home/antonio/Downloads/httpd-trunk/install/cgi-bin/"

</IfModule>

<IfModule cgid_module>
    #
    # ScriptSock: On threaded servers, designate the path to the UNIX
    # socket used to communicate with the CGI daemon of mod_cgid.
    #
    #Scriptsock cgisock
</IfModule>

#
# "/home/antonio/Downloads/httpd-trunk/install/cgi-bin" should be changed to whatever your ScriptAliased
# CGI directory exists, if you have that configured.
#
<Directory "/home/antonio/Downloads/httpd-trunk/install/cgi-bin">
    AllowOverride None
    Options None
    Require all granted
</Directory>

<IfModule headers_module>
    #
    # Avoid passing HTTP_PROXY environment to CGI's on this or any proxied
    # backend servers which have lingering "httpoxy" defects.
    # 'Proxy' request header is undefined by the IETF, not listed by IANA
    #
    RequestHeader unset Proxy early
</IfModule>

<IfModule mime_module>
    #
    # TypesConfig points to the file containing the list of mappings from
    # filename extension to MIME-type.
    #
    TypesConfig conf/mime.types

    #
    # AddType allows you to add to or override the MIME configuration
    # file specified in TypesConfig for specific file types.
    #
    #AddType application/x-gzip .tgz
    #
    # AddEncoding allows you to have certain browsers uncompress
    # information on the fly. Note: Not all browsers support this.
    #
    #AddEncoding x-compress .Z
    #AddEncoding x-gzip .gz .tgz
    #
    # If the AddEncoding directives above are commented-out, then you
    # probably should define those extensions to indicate media types:
    #
    AddType application/x-compress .Z
    AddType application/x-gzip .gz .tgz

    #
    # AddHandler allows you to map certain file extensions to "handlers":
    # actions unrelated to filetype. These can be either built into the server
    # or added with the Action directive (see below)
    #
    # To use CGI scripts outside of ScriptAliased directories:
    # (You will also need to add "ExecCGI" to the "Options" directive.)
    #
    #AddHandler cgi-script .cgi

    # For type maps (negotiated resources):
    AddHandler type-map var

    #
    # Filters allow you to process content before it is sent to the client.
    #
    # To parse .shtml files for server-side includes (SSI):
    # (You will also need to add "Includes" to the "Options" directive.)
    #
    #AddType text/html .shtml
    #AddOutputFilter INCLUDES .shtml
</IfModule>

#
# The mod_mime_magic module allows the server to use various hints from the
# contents of the file itself to determine its type.  The MIMEMagicFile
# directive tells the module where the hint definitions are located.
#
#MIMEMagicFile conf/magic

#
# Customizable error responses come in three flavors:
# 1) plain text 2) local redirects 3) external redirects
#
# Some examples:
#ErrorDocument 500 "The server made a boo boo."
#ErrorDocument 404 /missing.html
#ErrorDocument 404 "/cgi-bin/missing_handler.pl"
#ErrorDocument 402 http://www.example.com/subscription_info.html
#

#
# MaxRanges: Maximum number of Ranges in a request before
# returning the entire resource, or one of the special
# values 'default', 'none' or 'unlimited'.
# Default setting is to accept 200 Ranges.
#MaxRanges unlimited

#
# EnableMMAP and EnableSendfile: On systems that support it, 
# memory-mapping or the sendfile syscall may be used to deliver
# files.  This usually improves server performance, but must
# be turned off when serving from networked-mounted 
# filesystems or if support for these functions is otherwise
# broken on your system.
# Defaults: EnableMMAP On, EnableSendfile Off
#
#EnableMMAP off
#EnableSendfile on

# Supplemental configuration
#
# The configuration files in the conf/extra/ directory can be 
# included to add extra features or to modify the default configuration of 
# the server, or you may simply copy their contents here and change as 
# necessary.

# Server-pool management (MPM specific)
Include conf/extra/httpd-mpm.conf

# Multi-language error messages
#Include conf/extra/httpd-multilang-errordoc.conf

# Fancy directory listings
#Include conf/extra/httpd-autoindex.conf

# Language settings
#Include conf/extra/httpd-languages.conf

# User home directories
#Include conf/extra/httpd-userdir.conf

# Real-time info on requests and configuration
#Include conf/extra/httpd-info.conf

# Virtual hosts
#Include conf/extra/httpd-vhosts.conf

# Local access to the Apache HTTP Server Manual
#Include conf/extra/httpd-manual.conf

# Distributed authoring and versioning (WebDAV)
Include conf/extra/httpd-dav.conf

# Various default settings
#Include conf/extra/httpd-default.conf

# Policy enforcement
#Include conf/extra/httpd-policy.conf

# Configuration macros
#Include conf/extra/httpd-macro.conf

# Configure mod_proxy_html to understand HTML4/XHTML1
<IfModule proxy_html_module>
Include conf/extra/proxy-html.conf
</IfModule>

# Secure (SSL/TLS) connections
#Include conf/extra/httpd-ssl.conf
#
# Note: The following must must be present to support
#       starting without SSL on platforms with no /dev/random equivalent
#       but a statically compiled-in mod_ssl.
#
<IfModule ssl_module>
SSLRandomSeed startup builtin
SSLRandomSeed connect builtin
</IfModule>

<Location "/x">
    AuthFormProvider file
    AuthUserFile "conf/passwd"
    AuthType form
    AuthName "/admin"
    AuthFormLoginRequiredLocation "http://example.com/login.html"

    Session On
    SessionCookieName session path=/

    Require valid-user
</Location>

<LocationMatch "/ac/.*">
    AuthFormProvider file
    AuthUserFile "conf/passwd"
    AuthType form
    AuthName "/admin"

    Session On
    SessionCookieName session path=/

</LocationMatch>

<Location "/l">
    AuthFormProvider file
    AuthUserFile "conf/passwd"
    AuthType form
    AuthName "/admin"
    AuthFormLoginSuccessLocation "http://example.com/login.html"
    AuthFormLocation re
    AuthFormBody bo
    AuthFormMethod me
    AuthFormMimetype mi
    AuthFormSitePassphrase secret
    AuthFormUsername us
    AuthFormPassword pa

    Session On
    SessionCookieName session path=/

    Require valid-user
</Location>

<Location "/ll">
    AuthFormProvider file
    AuthUserFile "conf/passwd"
    AuthType form
    AuthName "/admin"
    AuthFormLoginSuccessLocation "http://example.com/login.html"
    AuthFormLocation re
    AuthFormBody bo
    AuthFormMethod me
    AuthFormMimetype mi
    AuthFormSitePassphrase secret
    AuthFormUsername us
    AuthFormPassword pa

    Session On
    SessionEnv On
    SessionExpiryUpdateInterval 1000
    SessionMaxAge 100
    SessionCookieName session path=/
    SessionHeader X-Replace-Session
    SessionExclude others
    SessionInclude /

    Require valid-user
</Location>

<Location "/g">
    AuthBasicProvider file
    AuthUserFile "conf/passwd"
    AuthType Basic
    AuthName "/admin"

    Require valid-user
</Location>

<Location "/gg">
    AuthBasicProvider file
    AuthUserFile "conf/passwd_digest"
    AuthType Basic
    AuthName "admin"
    AuthBasicUseDigestAlgorithm MD5
    AuthBasicFake "%{REQUEST_METHOD}" "%{sha1:passphrase-%{QUERY_STRING}}"

    Require valid-user
</Location>

<Location "/i">
    AuthType Digest
    AuthName "private area"
    AuthDigestDomain "/i"
    
    AuthDigestProvider file
    AuthUserFile "conf/htdigest"
    Require valid-user
</Location>

<Location "/h">
    AuthFormProvider file
    AuthUserFile "conf/passwd"
    AuthType form
    AuthName "/admin"
    AuthFormLoginSuccessLocation "http://example.com/login.html"
    AuthFormLocation re
    AuthFormBody bo
    AuthFormMethod me
    AuthFormMimetype mi
    AuthFormSitePassphrase secret
    AuthFormUsername us
    AuthFormPassword pa

    Session On
    SessionCookieName session path=/

    Require user john paul george temp
</Location>

<Location "/m">
    SetHandler form-logout-handler
    AuthFormLogoutLocation "http://example.com/loggedout.html"
    Session on
</Location>

<Location "/e">
    SetOutputFilter DEFLATE
</Location>

<Location "/p">
    SetInputFilter DEFLATE
</Location>

<Location "/pp">
    SetOutputFilter INFLATE
</Location>

<Location "/ppp">
    SetOutputFilter BROTLI_COMPRESS
</Location>

# CryptoDriver openssl



#CacheEnable  disk  /c/
#CacheHeader on
#CacheDetailHeader on
#CacheRoot /home/antonio/Downloads/httpd-trunk/install/logs/cache
#CacheDefaultExpire 3601
#CacheIgnoreHeaders Example

<Location "/c/m">
    AuthFormProvider file
    AuthUserFile "conf/passwd"
    AuthType form
    AuthName "/admin"
    AuthFormLoginRequiredLocation "http://example.com/login_required.html"

    Session On
    SessionCookieName session path=/

    Require valid-user
</Location>

<Location "/c/w">
    #CacheEnable  disk

    AuthFormProvider file
    AuthUserFile "conf/passwd"
    AuthType form
    AuthName "/admin"
    AuthFormLoginSuccessLocation "http://example.com/success.html"
    AuthFormLocation re
    AuthFormBody bo
    AuthFormMethod me
    AuthFormMimetype mi
    AuthFormSitePassphrase secret
    AuthFormUsername us
    AuthFormPassword pa

    Session On
    SessionCookieName session path=/

    Require valid-user
</Location>

#Protocols h2 h2c http/1.1

<Location "/s">
    SetOutputFilter DATA
</Location>

<Location "/z">
    AddOutputFilterByType SUBSTITUTE text/html
    Substitute "s/foo/bar/ni"
    Substitute "s|<BR */?>|<br />|i"
</Location>

<Location "/y">
    SetOutputFilter RATE_LIMIT
    SetEnv rate-limit 400 
    SetEnv rate-initial-burst 512
</Location>

Redirect "/r" "/index.html"

RewriteEngine  on
RewriteRule    "^/f\.html$"  "/c.gif" [PT]

RemoveCharset .htmlx

